// <auto-generated />
using System;
using MgMarmore.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MgMarmore.Data.Migrations
{
    [DbContext(typeof(MgContext))]
    [Migration("20200619144615_Add categoria no MaterialMapping")]
    partial class AddcategorianoMaterialMapping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MgMarmore.Business.Models.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ClienteId");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TipoEndereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Borda")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<decimal>("Frontao")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("MetroQuadradoTotal")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<Guid>("OrcamentoId");

                    b.Property<decimal>("Profundidade")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<int>("QuantidadeItens")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Rodape")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("RodapeComprimento")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("RodapeTotal")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("Saia")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("Tampao")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("DECIMAL(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoriaId");

                    b.Property<decimal>("Custo")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Orcamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClienteId");

                    b.Property<string>("Observacoes")
                        .HasColumnType("VARCHAR(300)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Peca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ApoioComprimento")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("ApoioLargura")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<decimal>("ComprimentoPeca");

                    b.Property<Guid>("ItemId");

                    b.Property<decimal>("LarguraPeca")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<Guid>("MaterialId");

                    b.Property<decimal>("MetroQuadradoPeca")
                        .HasColumnType("DECIMAL(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Custo")
                        .HasColumnType("DECIMAL(10,3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("OrcamentoId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<Guid>("ItemId");

                    b.Property<Guid>("OrcamentoId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(10,3)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Endereco", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Item", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Orcamento", "Orcamento")
                        .WithMany("Itens")
                        .HasForeignKey("OrcamentoId");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Material", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Categoria", "Categoria")
                        .WithMany("Materiais")
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Orcamento", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Cliente", "Cliente")
                        .WithMany("Orcamentos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Peca", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Item", "Item")
                        .WithMany("Pecas")
                        .HasForeignKey("ItemId");

                    b.HasOne("MgMarmore.Business.Models.Material", "Material")
                        .WithMany("Pecas")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Produto", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Orcamento", "Orcamento")
                        .WithMany("Produtos")
                        .HasForeignKey("OrcamentoId");
                });

            modelBuilder.Entity("MgMarmore.Business.Models.Servico", b =>
                {
                    b.HasOne("MgMarmore.Business.Models.Item", "Item")
                        .WithMany("Servicos")
                        .HasForeignKey("ItemId");

                    b.HasOne("MgMarmore.Business.Models.Orcamento", "Orcamento")
                        .WithMany("Servicos")
                        .HasForeignKey("OrcamentoId");
                });
#pragma warning restore 612, 618
        }
    }
}
